#!/bin/sh

apt update
apt -y upgrade 

Green='\033[0;32m' 
Yellow='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m'

##########################################################################################################################
# cat need escape $
cat > /etc/kernel/postinst.d/zz-update-systemd-boot <<EOF
#!/bin/sh

/usr/bin/kernel-install add "\$1" "\$2"

if [ \$? -eq 0 ]
then
  echo "${Green}Systemd-boot Add Entry Success${NC}"
  exit 0
else
  echo "${RED}Systemd-boot Add Entry Failed${NC}"
  exit 1
fi

# We only need 2 kernel: the latest one and the old one
NUMBER_OF_EXTRA_KERNEL=$(dpkg -l|awk '{print $2}'|grep linux-image|sed '/linux-image-amd64/d'|sed '/linux-image-arm64/d'|sort -r|sed '1,2d'|wc -l)

if [ ${NUMBER_OF_EXTRA_KERNEL} -gt 0 ] 
then
    echo "${Green}More than two kernel found${NC}"
    
    for i in $(dpkg -l|awk '{print $2}'|grep linux-image|sed '/linux-image-amd64/d'|sed '/linux-image-arm64/d'|sort -r|sed '1,2d')
    do
        apt purge -y \${i}
        if [ \$? -eq 0 ]
        then
            echo "${Green}Delete Kernel \${i} Success${NC}"
        else
            echo "${RED}Delete Kernel \${i} Failed${NC}"
        fi
    done
fi

EOF
##########################################################################################################################
chmod 755 /etc/kernel/postinst.d/zz-update-systemd-boot
##########################################################################################################################
cat > /etc/kernel/postrm.d/zz-update-systemd-boot <<EOF
#!/bin/sh

/usr/bin/kernel-install remove "\$1"

if [ \$? -eq 0 ]
then
  echo "${Green}Systemd-boot Remove Entry Success${NC}"
  exit 0
else
  echo "${RED}Systemd-boot Remove Entry Failed${NC}"
  exit 1
fi
EOF
##########################################################################################################################
chmod 755 /etc/kernel/postrm.d/zz-update-systemd-boot
##########################################################################################################################
MACHINE_ID=$(cat /etc/machine-id)
ESP_PATH=$(bootctl -p)

bootctl install 
mkdir ${ESP_PATH}/${MACHINE_ID}

##########################################################################################################################
cat > ${ESP_PATH}/loader/loader.conf<<EOF
timeout 2
EOF
##########################################################################################################################

# get latest installed kernel package name 
KERNEL_PACKAGE=$(dpkg -l|awk '{print $2}'|grep linux-image|sed '/linux-image-amd64/d'|sed '/linux-image-arm64/d'|sort -r|head -1)

# manually trigger postinst.d script to run kernel-install
# kernel-install move /boot/vmlinuz /boot/initrd to ESP:/MACHINEID.
# and add entry in ESP:/loader/entries
apt -y reinstall ${KERNEL_PACKAGE}

apt -y remove grub*
apt install efibootmgr
apt -y autoremove
efibootmgr
##########################################################################################################################
echo "${Yellow}Please Manually Configure Boot Order${NC}"
echo "${Yellow}efibootmgr -b <X> -B${NC}"
